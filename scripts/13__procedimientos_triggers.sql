USE FILMOTECA;
GO

/*
  PROCEDIMIENTO ALMACENADO SP_INSERT_PELICULA
  Insertar PELICULA, recibe los parametros:
  NUM_PEL, T_ORIGINAL, T_TRADUCIDO, ANIO_EDICION, CATEGORIA,
  DURACION, PRESUPUESTO, CALIFICACION, GUIONISTA, SOPORTE
*/
CREATE PROCEDURE SP_INSERT_PELICULA
@NUM_PEL BIGINT,
@T_ORIGINAL VARCHAR(255),
@T_TRADUCIDO VARCHAR(255),
@ANIO_EDICION INT,
@CATEGORIA VARCHAR(100),
@DURACION TIME,
@PRESUPUESTO FLOAT,
@GUIONISTA VARCHAR(255),
@SOPORTE BIGINT
AS
  INSERT INTO PELICULAS VALUES(
    @NUM_PEL, @T_ORIGINAL, @T_TRADUCIDO, @ANIO_EDICION,
    @CATEGORIA, @DURACION, @PRESUPUESTO, @GUIONISTA, @SOPORTE
  )
GO

/*
  PROCEDIMIENTO ALMACENADO SP_UPDATE_PELICULA
  Actualizar PELICULA, recibe los parametros:
  NUM_PEL, T_ORIGINAL, T_TRADUCIDO, ANIO_EDICION, CATEGORIA,
  DURACION, PRESUPUESTO, CALIFICACION, GUIONISTA, SOPORTE
*/
CREATE PROCEDURE SP_UPDATE_PELICULA
@NUM_PEL BIGINT,
@T_ORIGINAL VARCHAR(255),
@T_TRADUCIDO VARCHAR(255),
@ANIO_EDICION INT,
@CATEGORIA VARCHAR(100),
@DURACION TIME,
@PRESUPUESTO FLOAT,
@GUIONISTA VARCHAR(255),
@SOPORTE BIGINT
AS
  UPDATE PELICULAS
    T_ORIGINAL = @T_ORIGINAL,
    T_TRADUCIDO = @T_TRADUCIDO,
    ANIO_EDICION = @ANIO_EDICION,
    CATEGORIA = @CATEGORIA,
    DURACION = @DURACION,
    PRESUPUESTO = @PRESUPUESTO,
    GUIONISTA = @GUIONISTA,
    SOPORTE = @SOPORTE
  WHERE NUM_PEL = @NUM_PEL
GO

-- Llamada a procedimiento
EXEC SP_UPDATE_PELICULA
  @NUM_PEL = 120,
  @T_ORIGINAL = 'La ouija',
  @T_TRADUCIDO = 'La ouija',
  @ANIO_EDICION = 2008,
  @CATEGORIA = 'Miedo',
  @DURACION = TRY_CAST('02:10:00.0000000' AS TIME)
  @PRESUPUESTO = 5000000.00
  @GUIONISTA = '1'
  @SOPORTE = 2
;

/*
  PROCEDIMIENTO ALMACENADO SP_DELETE_PELICULA
  ELIMINAR PELICULA, recibe el parametro NUM_PEL
*/
CREATE PROCEDURE SP_DELETE_PELICULA
@NUM_PEL BIGINT
AS
  DELETE FROM PELICULA WHERE NUM_PEL = @NUM_PEL
GO

-- Llamada a procedimiento
EXEC SP_DELETE_PELICULA @NUM_PEL = 2;

/*
  PROCEDIMIENTO ALMACENADO SP_INSERT_ALQUILA_P
  Insertar ALQUILA_P Recibe dos parametros de entrada, NUM_PEL y SOCIO
*/
CREATE PROCEDURE SP_INSERT_ALQUILA_P
@NUM_PEL BIGINT, @SOCIO VARCHAR(100)
AS
  INSERT INTO ALQUILA_P VALUES(@NUM_PEL, @SOCIO)
GO

-- Llamada a procedimiento
EXEC SP_INSERT_ALQUILA_P @NUM_PEL = 1, @SOCIO = '1';

/*
  PROCEDIMIENTO ALMACENADO SP_INSERT_ALQUILA_B
  Insertar ALQUILA_B Recibe dos parametros de entrada, B_SONORA, SOCIO
*/
CREATE PROCEDURE SP_INSERT_ALQUILA_B
@B_SONORA VARCHAR(255), @SOCIO VARCHAR(100)
AS
  INSERT INTO ALQUILA_B VALUES(@B_SONORA, @SOCIO)
GO

-- Llamada a procedimiento
EXEC SP_INSERT_ALQUILA_B @B_SONORA = '1', @SOCIO = '1';

/*
  PROCEDIMIENTO ALMACENADO SP_MODIFICAR_SOCIO
  Modificar SOCIO
*/
CREATE PROCEDURE SP_MODIFICAR_SOCIO
@DNI VARCHAR(100),
@APELLIDOS VARCHAR(255),
@NOMBRE VARCHAR(100),
@DIRECCION VARCHAR(255),
@EDAD INT
AS
  UPDATE SOCIOS
  SET DNI = @DNI,
    APELLIDOS = @APELLIDOS,
    NOMBRE = @NOMBRE,
    DIRECCION = @DIRECCION,
    EDAD = @EDAD
  WHERE DNI = @DNI
GO

-- Llamada a procedimiento
EXEC SP_MODIFICAR_SOCIO
  @DNI ='1',
  @APELLIDOS = 'Becerra',
  @NOMBRE = 'Miguel',
  @DIRECCION = 'Avenida siempre viva',
  @EDAD = 30
;

/*
  PROCEDIMIENTO ALMACENADO SP_ADQUIRIR_ABONOS
  ADQUIRIR ABONOS recibe dos parametros: SOCIO, ABONO
*/
CREATE PROCEDURE SP_ADQUIRIR_ABONOS
@SOCIO VARCHAR(100),
@ABONO VARCHAR(100)
AS
  INSERT INTO ADQUIERE VALUES(@SOCIO, @ABONO)
GO

-- Llamada a procedimiento
EXEC SP_ADQUIRIR_ABONOS @SOCIO = '1', @ABONO = '1'

/*
  TRIGGER TG_REVISAR_NOMBRE_SOCIO
  Regalar una ALQUILACION de PELICULA a todos los nuevos SOCIOS
  que tengan NOMBRE = Benita
*/
CREATE TRIGGER TG_REVISAR_NOMBRE_SOCIO
ON SOCIOS
AFTER INSERT, UPDATE
AS
  BEGIN
    IF NEW.NOMBRE == 'Benita' THEN
      INSERT INTO ALQUILA_P VALUES(1, NEW.DNI)
    END IF
  END
GO

/*
  TRIGGER TG_REVISAR_PELICULAS_ALQUILADAS
  Evita que se ALQUILE la misma PELICULA 2 o mas veces por el mismo SOCIO
*/
CREATE TRIGGER TG_REVISAR_PELICULAS_ALQUILADAS
ON ALQUILA_P FOR EACH ROW
INSTEAD OF INSERT, UPDATE
AS
  BEGIN
  IF NOT EXISTS (SELECT NUM_PEL, SOCIO FROM ALQUILA_P WHERE NEW.NUM_PEL = NUM_PEL, NEW.SOCIO = SOCIO)
    INSERT INTO ALQUILA_P VALUES(NEW.NUM_PEL, NEW.SOCIO)
  END
GO
