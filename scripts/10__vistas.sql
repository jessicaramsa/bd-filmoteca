USE FILMOTECA;
GO

/*
  VW_PELICULAS_ALQUILADAS
  Muestra las PELICULAS que han sido ALQUILADAS
  por todos los SOCIOS
*/
CREATE VIEW VW_PELICULAS_ALQUILADAS AS
  SELECT
    AP.SOCIO, S.NOMBRE, S.APELLIDOS,
    P.T_ORIGINAL, P.T_TRADUCIDO, P.ANIO_EDICION
  FROM SOCIOS AS S INNER JOIN ALQUILA_P AS AP
    ON S.DNI = AP.SOCIO
    INNER JOIN PELICULAS AS P
    ON P.NUM_PEL = AP.NUM_PEL
;
GO

-- Llamada a vista
SELECT * FROM VW_PELICULAS_ALQUILADAS;
GO

/*
  VW_ABONOS_ADQUIRIDOS_POR_SOCIOS
  Muestra todos los ABONOS ADQUIRIDOS por los SOCIOS en el actual ANIO
*/
CREATE VIEW VW_ABONOS_ADQUIRIDOS_POR_SOCIOS AS
  SELECT
    AD.SOCIO,  S.NOMBRE, S.APELLIDOS,
    AD.ABONO, A.DESCRIPCION, A.N_DIAS, A.COSTO, A.CICLO, A.ANIO
  FROM ABONOS AS A INNER JOIN ADQUIERE AS AD
    ON A.COD_A = AD.ABONO
    INNER JOIN SOCIOS AS S
    ON AD.SOCIO = S.DNI
  WHERE A.ANIO = YEAR(GETDATE())
;
GO

-- Llamada a vista
SELECT * FROM VW_ABONOS_ADQUIRIDOS_POR_SOCIOS;
GO

/*
  VISTA VW_PELICULAS
  Todas las PELICULAS registradas
*/
CREATE VIEW VW_PELICULAS AS
  SELECT
    P.T_ORIGINAL, P.T_TRADUCIDO, PD.NOMBRE,
    P.ANIO_EDICION, P.CATEGORIA, P.DURACION, P.CALIFICACION
  FROM PELICULAS P INNER JOIN DIRIGE D
    ON P.NUM_PEL = D.NPEL
    INNER JOIN PARTICIPANTES AS PD
    ON PD.CODIGO = D.DIRECTOR
;
GO

-- Llamada a vista
SELECT * FROM VW_PELICULAS;
GO

/*
  VISTA VW_TOTAL_ABONOS_SOCIOS
  Muestra la CANTIDAD TOTAL que los SOCIOS han ADQUIRIDO en ABONOS
*/
CREATE VIEW VW_TOTAL_ABONOS_SOCIOS AS
  SELECT
	S.NOMBRE, SUM(A.COSTO) AS TOTAL_SOCIO
  FROM SOCIOS AS S INNER JOIN ADQUIERE AD
	ON S.DNI = AD.SOCIO
	INNER JOIN ABONOS A
	ON A.COD_A = AD.ABONO
  GROUP BY S.NOMBRE
;
GO

-- Llamada a vista
SELECT * FROM VW_TOTAL_ABONOS_SOCIOS;
GO
