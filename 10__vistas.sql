USE FILMOTECA;

/*
  VW_PELICULAS_ALQUILADAS
  Muestra las PELICULAS que han sido ALQUILADAS
  por todos los SOCIOS
*/
CREATE VIEW VW_PELICULAS_ALQUILADAS AS
  SELECT
    AP.SOCIO, CONCAT(S.NOMBRE, ' ', S.APELLIDOS) AS NOMBRE_SOCIO,
    P.T_ORIGINAL, P.T_TRADUCIDO, P.ANIO_EDICION
  FROM SOCIOS AS S INNER JOIN ALQUILA_P AS AP
    ON S.DNI = AP.SOCIO
    INNER JOIN PELICULAS AS P
    ON P.NUM_PEL = AP.NUM_PEL
;

-- Llamada a vista
SELECT * FROM VW_PELICULAS_ALQUILADAS;

/*
  VW_ABONOS_ADQUIRIDOS_POR_SOCIOS
  Muestra todos los ABONOS ADQUIRIDOS por los SOCIOS en el actual ANIO
*/
CREATE VIEW VW_ABONOS_ADQUIRIDOS_POR_SOCIOS AS
  SELECT
    AD.SOCIO, CONCAT(S.NOMBRE, ' ', S.APELLIDOS) AS NOMBRE_SOCIO,
    AD.ABONO, A.DESCRIPCION, A.N_DIAS, A.COSTO, A.CICLO, A.ANIO
  FROM ABONOS AS A INNER JOIN ADQUIERE AS AD
    ON A.COD_A = AD.ABONO
    INNER JOIN SOCIOS AS S
    ON AD.SOCIO = S.DNI
  WHERE A.ANIO = YEAR(NOW())
;

-- Llamada a vista
SELECT * FROM VW_ABONOS_ADQUIRIDOS_POR_SOCIOS;

/*
  CONSULTA: todas las PELICULAS registradas
  FUNCION DE ORDENAMIENTO ORDER BY: ordenar PELICULAS por T_ORIGINAL de manera DESCENDENTE
*/
CREATE VIEW VW_PELICULAS AS
  SELECT
    P.T_ORIGINAL, P.T_TRADUCIDO, PD.NOMBRE,
    P.ANIO_EDICION, P.CATEGORIA, P.DURACION, P.CALIFICACION
  FROM PELICULAS P INNER JOIN DIRIGE D
    ON P.NUM_PEL = D.NPEL
    INNER JOIN PARTICIPANTES AS PD
    ON PD.CODIGO = D.DIRECTOR
  ORDER BY P.T_ORIGINAL DESC
;

-- Llamada a vista
SELECT * FROM VW_PELICULAS;
