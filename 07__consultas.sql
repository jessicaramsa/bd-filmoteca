USE FILMOTECA;

/*
  CONSULTA: PELICULAS ALQUILADAS por los SOCIOS
  FUNCION CONCAT(): 
*/
SELECT
  AP.SOCIO, CONCAT(S.NOMBRE, ' ', S.APELLIDOS) AS NOMBRE_SOCIO,
  P.T_ORIGINAL, P.T_TRADUCIDO, P.ANIO_EDICION
FROM SOCIOS AS S INNER JOIN ALQUILA_P AS AP
  ON S.DNI = AP.SOCIO
  INNER JOIN PELICULAS AS P
  ON P.NUM_PEL = AP.NUM_PEL
;

/*
  CONSULTA: Cantidad de veces que se han ALQUILADO las PELICULAS por SOCIOS
  FUNCION DE AGREGACION COUNT(): total de veces que la PELICULA ha sido ALQUILADA por el SOCIO
  FUNCION DE AGRUPAMIENTO GROUP BY: agrupar los registros por SOCIO
*/
SELECT
  S.DNI, CONCAT(S.NOMBRE, ' ', S.APELLIDOS) AS NOMBRE_SOCIO, S.EDAD,
  P.T_ORIGINAL, P.T_TRADUCIDO, P.ANIO_EDICION,
  (SELECT COUNT(*) FROM ALQUILA_P WHERE SOCIO = AP.SOCIO) AS VECES_ALQUILADA
FROM SOCIOS AS S INNER JOIN ALQUILA_P AS AP
  ON S.DNI = AP.SOCIO
  INNER JOIN PELICULAS AS P
  ON P.NUM_PEL = AP.NUM_PEL
GROUP BY S.DNI DESC
;

/*
  CONSULTA: PELICULAS que hayan sido DIRIGIDAS por PARTICIPANTES que han ganado un OSCAR
  FUNCION ORDENAMIENTO ORDER BY: ordenar los resultados de mayor cantidad de OSCAR recibidos a menor
*/
SELECT
  PD.NOMBRE, PD.OSCAR,
  P.T_ORIGINAL, P.T_TRADUCIDO, P.ANIO_EDICION, P.CALIFICACION
FROM PARTICIPANTES AS PD INNER JOIN DIRIGE AS D
  ON PD.CODIGO = D.DIRECTOR
  INNER JOIN PELICULAS AS P
  ON P.NUM_PEL = D.NPEL
WHERE PD.OSCAR > 0
ORDER BY PD.OSCAR DESC
;
